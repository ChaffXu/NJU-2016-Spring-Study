[
  {
    "codes": "              ",
    "blocks": []
  },
  {
    "codes": "                  ",
    "blocks": []
  },
  {
    "codes": "            ",
    "blocks": []
  },
  {
    "codes": "     ",
    "blocks": []
  },
  {
    "codes": "\tpublic MatrixC timesFromConsole(){ ",
    "blocks": []
  },
  {
    "codes": "\t\tScanner scanner=new Scanner(System.in); ",
    "blocks": [0]
  },
  {
    "codes": "\t\tint m1=scanner.nextInt(); ",
    "blocks": [0]
  },
  {
    "codes": "\t\tint n1=scanner.nextInt(); ",
    "blocks": [0]
  },
  {
    "codes": "\t\tint[][] temp=new int[m1][n1]; ",
    "blocks": [0]
  },
  {
    "codes": "\t\tint[][] result=new int[m][n]; ",
    "blocks": [0]
  },
  {
    "codes": "\t\tfor (int i = 0; i < m1; i++) { ",
    "blocks": [
      0,
      1,
      2,
      7
    ]
  },
  {
    "codes": "\t\t\tfor (int j = 0; j < n1; j++) { ",
    "blocks": [
      3,
      4,
      5,
      6,
      7
    ]
  },
  {
    "codes": "\t\t\t\ttemp[i][j]=scanner.nextInt(); ",
    "blocks": [
      6,
      7
    ]
  },
  {
    "codes": "\t\t\t\t} ",
    "blocks": [
      6,
      7
    ]
  },
  {
    "codes": "\t\t\t} ",
    "blocks": [7]
  },
  {
    "codes": "\t\tif(n==m1){ ",
    "blocks": [
      8,
      9
    ]
  },
  {
    "codes": "\t\t\tfor (int i = 0; i <m ; i++) { ",
    "blocks": [
      21,
      10,
      11,
      12
    ]
  },
  {
    "codes": "\t\t\t\tfor (int j = 0; j < n1; j++) { ",
    "blocks": [
      21,
      20,
      13,
      14,
      15
    ]
  },
  {
    "codes": "\t\t\t\t\tfor (int a = 0; a < n; a++) { ",
    "blocks": [
      17,
      16,
      19,
      18,
      21,
      20
    ]
  },
  {
    "codes": "\t\t\t\t\t\tresult[i][j]=result[i][j]+data[i][a]*temp[a][j]; ",
    "blocks": [
      19,
      21,
      20
    ]
  },
  {
    "codes": "\t\t\t\t\t} ",
    "blocks": [
      19,
      21,
      20
    ]
  },
  {
    "codes": "\t\t\t\t\t ",
    "blocks": [
      21,
      20
    ]
  },
  {
    "codes": "\t\t\t\t} ",
    "blocks": [
      21,
      20
    ]
  },
  {
    "codes": "\t\t\t\t ",
    "blocks": [21]
  },
  {
    "codes": "\t\t\t} ",
    "blocks": [21]
  },
  {
    "codes": "\t\t} ",
    "blocks": []
  },
  {
    "codes": "\t\tMatrixC resultMatrix=new MatrixC(result); ",
    "blocks": [22]
  },
  {
    "codes": "\t\treturn resultMatrix; ",
    "blocks": [22]
  },
  {
    "codes": "\t} ",
    "blocks": []
  },
  {
    "codes": "\t ",
    "blocks": []
  },
  {
    "codes": "\t    ",
    "blocks": []
  },
  {
    "codes": "                   ",
    "blocks": []
  },
  {
    "codes": "                           ",
    "blocks": []
  }
]